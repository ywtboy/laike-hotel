<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ywt.laike.hotel.dao.OrderReserveMapper">
  <resultMap id="BaseResultMap" type="com.ywt.laike.hotel.model.OrderReserve">
    <id column="reserve_id" jdbcType="BIGINT" property="reserveId" />
    <result column="room_type_id" jdbcType="BIGINT" property="roomTypeId" />
    <result column="room_type_name" jdbcType="VARCHAR" property="roomTypeName" />
    <result column="room_type_price" jdbcType="DECIMAL" property="roomTypePrice" />
    <result column="hotel_no" jdbcType="VARCHAR" property="hotelNo" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="reserve_num" jdbcType="INTEGER" property="reserveNum" />
    <result column="allotted_num" jdbcType="INTEGER" property="allottedNum" />
    <result column="estimate_in_time" jdbcType="TIMESTAMP" property="estimateInTime" />
    <result column="estimate_out_time" jdbcType="TIMESTAMP" property="estimateOutTime" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="is_deleted" jdbcType="BIT" property="deleted" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    reserve_id, room_type_id, room_type_name, room_type_price, hotel_no, order_no, reserve_num, 
    allotted_num, estimate_in_time, estimate_out_time, operator_id, operator_name, is_deleted, 
    gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_reserve
    where reserve_id = #{reserveId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_reserve
    where reserve_id = #{reserveId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ywt.laike.hotel.model.OrderReserve">
    insert into order_reserve (reserve_id, room_type_id, room_type_name, 
      room_type_price, hotel_no, order_no, 
      reserve_num, allotted_num, estimate_in_time, 
      estimate_out_time, operator_id, operator_name, 
      is_deleted, gmt_create, gmt_modified
      )
    values (#{reserveId,jdbcType=BIGINT}, #{roomTypeId,jdbcType=BIGINT}, #{roomTypeName,jdbcType=VARCHAR}, 
      #{roomTypePrice,jdbcType=DECIMAL}, #{hotelNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, 
      #{reserveNum,jdbcType=INTEGER}, #{allottedNum,jdbcType=INTEGER}, #{estimateInTime,jdbcType=TIMESTAMP}, 
      #{estimateOutTime,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=BIGINT}, #{operatorName,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ywt.laike.hotel.model.OrderReserve">
    insert into order_reserve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reserveId != null">
        reserve_id,
      </if>
      <if test="roomTypeId != null">
        room_type_id,
      </if>
      <if test="roomTypeName != null">
        room_type_name,
      </if>
      <if test="roomTypePrice != null">
        room_type_price,
      </if>
      <if test="hotelNo != null">
        hotel_no,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="reserveNum != null">
        reserve_num,
      </if>
      <if test="allottedNum != null">
        allotted_num,
      </if>
      <if test="estimateInTime != null">
        estimate_in_time,
      </if>
      <if test="estimateOutTime != null">
        estimate_out_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="deleted != null">
        is_deleted,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reserveId != null">
        #{reserveId,jdbcType=BIGINT},
      </if>
      <if test="roomTypeId != null">
        #{roomTypeId,jdbcType=BIGINT},
      </if>
      <if test="roomTypeName != null">
        #{roomTypeName,jdbcType=VARCHAR},
      </if>
      <if test="roomTypePrice != null">
        #{roomTypePrice,jdbcType=DECIMAL},
      </if>
      <if test="hotelNo != null">
        #{hotelNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="reserveNum != null">
        #{reserveNum,jdbcType=INTEGER},
      </if>
      <if test="allottedNum != null">
        #{allottedNum,jdbcType=INTEGER},
      </if>
      <if test="estimateInTime != null">
        #{estimateInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="estimateOutTime != null">
        #{estimateOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ywt.laike.hotel.model.OrderReserve">
    update order_reserve
    <set>
      <if test="roomTypeId != null">
        room_type_id = #{roomTypeId,jdbcType=BIGINT},
      </if>
      <if test="roomTypeName != null">
        room_type_name = #{roomTypeName,jdbcType=VARCHAR},
      </if>
      <if test="roomTypePrice != null">
        room_type_price = #{roomTypePrice,jdbcType=DECIMAL},
      </if>
      <if test="hotelNo != null">
        hotel_no = #{hotelNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="reserveNum != null">
        reserve_num = #{reserveNum,jdbcType=INTEGER},
      </if>
      <if test="allottedNum != null">
        allotted_num = #{allottedNum,jdbcType=INTEGER},
      </if>
      <if test="estimateInTime != null">
        estimate_in_time = #{estimateInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="estimateOutTime != null">
        estimate_out_time = #{estimateOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null">
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        is_deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where reserve_id = #{reserveId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ywt.laike.hotel.model.OrderReserve">
    update order_reserve
    set room_type_id = #{roomTypeId,jdbcType=BIGINT},
      room_type_name = #{roomTypeName,jdbcType=VARCHAR},
      room_type_price = #{roomTypePrice,jdbcType=DECIMAL},
      hotel_no = #{hotelNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      reserve_num = #{reserveNum,jdbcType=INTEGER},
      allotted_num = #{allottedNum,jdbcType=INTEGER},
      estimate_in_time = #{estimateInTime,jdbcType=TIMESTAMP},
      estimate_out_time = #{estimateOutTime,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=BIGINT},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      is_deleted = #{deleted,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where reserve_id = #{reserveId,jdbcType=BIGINT}
  </update>

  <select id="listOrderReservesByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_reserve
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </select>

  <select id="listOrderReservesByOrderNos"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_reserve
    where
    <choose>
      <when test="list != null and list.size() > 0">
        order_no in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </when>
      <otherwise>
        1 = 2
      </otherwise>
    </choose>
  </select>

  <select id="listOrderReserves" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_reserve
    <where>
      <include refid="querySql" />
    </where>
  </select>

  <sql id="querySql">
  <if test="orderNo != null">
    and order_no like CONCAT('%',#{orderNo},'%')
  </if>
  <if test="hotelNo != null">
    and hotel_no = #{hotelNo,jdbcType=VARCHAR}
  </if>
  <if test="estimateInTimeStart != null">
    and <![CDATA[ estimate_in_time >= #{estimateInTimeStart} ]]>
  </if>
  <if test="estimateInTimeEnd != null">
    and <![CDATA[ estimate_in_time < #{estimateInTimeEnd} ]]>
  </if>

  <if test="estimateOutTimeStart != null">
    and <![CDATA[ estimate_out_time >= #{estimateOutTimeStart} ]]>
  </if>
  <if test="estimateOutTimeEnd != null">
    and <![CDATA[ estimate_out_time < #{estimateOutTimeEnd} ]]>
  </if>

  <if test="allotted != null">
    <if test="allotted == true">
      and <![CDATA[ allotted_num = reserve_num ]]>
    </if>
    <if test="allotted == false">
      and <![CDATA[ allotted_num < reserve_num ]]>
    </if>
  </if>
  <!--<if test="orderDate != null">-->
  <!--and DATE_FORMAT(gmt_create,'%Y-%m-%d') = #{orderDate}-->
  <!--</if>-->
</sql>
</mapper>